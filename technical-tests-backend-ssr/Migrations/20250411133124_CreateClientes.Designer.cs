// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using technical_tests_backend_ssr.Data;

#nullable disable

namespace technical_tests_backend_ssr.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250411133124_CreateClientes")]
    partial class CreateClientes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("technical_tests_backend_ssr.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("technical_tests_backend_ssr.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Productos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Cuaderno A4",
                            Precio = 100m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Lápiz HB",
                            Precio = 200m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Bolígrafo Azul",
                            Precio = 300m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Carpeta Cartón",
                            Precio = 400m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Regla 30 cm",
                            Precio = 500m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Marcador Amarillo",
                            Precio = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Tijeras",
                            Precio = 700m,
                            Stock = 70
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Pegamento Líquido",
                            Precio = 800m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Papel Bond",
                            Precio = 900m,
                            Stock = 90
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Carpeta de Anillas",
                            Precio = 1000m,
                            Stock = 100
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
